openapi: 3.0.3
info:
  title: Choreo Samples - Reservation Management - Python REST API
  description: >-
    This is a sample API specification for a simple reservation application with in-memory cache
    written in Python.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Choreo
  url: https://choreo.dev
servers:
  - url: http://localhost:5000
tags:
  - name: reservations
    description: In-memory reservations list cache API
paths:
  /reservations:
    summary: List all reservations
    get:
      summary: List all reservation
      operationId: ListAllReservations
      tags:
        - reservations
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringArray"
  /reservation/{reservationId}:
    summary: Get reservation by ID
    get:
      tags:
        - reservation
      summary: Get reservation by ID
      operationId: GetReservationById
      parameters:
        - name: id
          in: path
          description: id of reservation to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyValue"
        "404":
          description: id not found
    delete:
      tags:
        - reservations
      summary: Delete reservation by id
      description: Deletes a reservation based on the id supplied
      operationId: DeleteReservationById
      parameters:
        - name: id
          in: path
          description: id of reservation to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "404":
          description: Id not found
    put:
      tags:
        - reservations
      summary: Update reservation status by id
      description: Updates the status of the reservation based on the id supplied
      operationId: UpdateReservationById
      parameters:
        - name: id
          in: path
          description: id of reservation to update
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "404":
          description: id not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Status"
  /healthz:
    summary: Healthcheck endpoint
    get:
      summary: Healthcheck
      operationId: Healthcheck
      responses:
        "200":
          description: Healthy response

components:
  schemas:
    Key:
      type: object
      properties:
        id:
          type: string
          example: "my-id"
    Status:
      type: object
      properties:
        status:
          type: string
          example: "read"
    KeyValue:
      type: object
      required:
        - name
        - author
        - status
      properties:
        name:
          type: string
          example: "my-name"
        author:
          type: string
          example: "my-author"
        status:
          type: string
          example: "read"
    StringArray:
      type: array
      items:
        type: string
